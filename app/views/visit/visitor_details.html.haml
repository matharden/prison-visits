- content_for :header, 'Visitor 1'

.Grid
  .Grid-2-3

    = form_for visit, url: update_visitor_details_path(attempts: params[:attempts]), :html => { :autocomplete => 'off' } do |f|
    
      - if instant_booking? && process_as_email?
        #instant-booking.flow-note
          %p Your visit request will be sent to visit booking staff to process manually.

      %h2 Your details

      - if visit.errors.any? || visit.visitors.any? { |v| v.errors.any? }
          
        - if visit.visitors.first.errors.include?(:api)
          - if params[:attempts].to_i > 1
            #error-summary.validation-summary.group
              %h2 Your details have not been recognised
              %p Your booking can’t be processed because your details don’t match what we have on record.
              %p You can either:
              %ul 
                %li Check your details and try again
                %li Submit a visit request for prison staff to check manually. They’ll confirm your visit in 3 working days.

              %p= f.submit 'Submit a visit request', :class => 'button button-primary', :id => 'continue_as_email', name: 'next'

          - else
            #error-summary.validation-summary.group(role="alert" tabindex="-1" aria-labelledby="error-heading")
              %h2#error-heading Your details need to be checked
              %p For security reasons we can’t highlight incorrect details.
              %p Make sure visitors names appear exactly as they do on the prisoner’s visitor list. Prisoners should give visitor names exactly as they appear on official documents, eg ‘Thomas’ instead of ‘Tom’.
              %p If you’re sure that all details are correct, contact the prisoner to check with them. 
              %p You won’t be able to book a visit to a prisoner who has moved prison or has no visit entitlement left.

        - else
          #error-summary.validation-summary.group(role="alert" tabindex="-1" aria-labelledby="error-heading")
            %h2#error-heading You need to fix the errors on this page before continuing.

            %ul.error-messages
              - visit.errors.full_messages.each do |msg|
                %li= msg
              - visit.visitors.select{|v|v.errors.any?}.each do |visitor|
                - visitor.errors.messages.each do |key, val|
                  %li
                    - if key == :base
                      = val.join(', ').humanize
                    - else
                      = [(visitor.index == 0 ? "your" : "visitor #{visitor.index+1}"), key, val.join(' and ')].join(' ').humanize

      %fieldset.XFormBlock
        %legend.visuallyhidden Your details
        = f.fields_for visit.visitors[0], index: '' do |visitor_form|
          = render 'visitor_fields', f: visitor_form, index: 0, visitor: visit.visitors[0], js_template: false

      %h2 Other visitors
      %p You can have up to 3 adults (over 18) and 3 children visiting at the same time. Seats are provided only for adults, so children may have to sit on your lap.

      %fieldset.XFormBlock
        %legend.visuallyhidden Other visitors
        .group.group--inline.visible--js-enabled
          %label(for="number_of_adults") How many other visitors?
          = select_tag 'visit[visitor][][number_of_adults]', options_for_select([['none',0],1,2,3,4,5], visit.visitors[0].number_of_adults.to_s), :class => 'number_of_visitors adults'

        .additional-visitors
          - visit.visitors.each_with_index do |visitor, index|
            - next if index == 0
            = f.fields_for visitor, index: '' do |visitor_form|
              = render 'visitor_fields', f: visitor_form, index: index, visitor: visitor, js_template: false

      .actions
        .primary-actions
          = f.submit :name => 'next', :value => 'Continue', :class => 'button button-primary', :id => 'continue'
          = f.submit :name => 'next', :value => 'Add another visitor', :class => 'button hidden--js-enabled', :id => 'add-visitor'
        %p= link_to 'Cancel and delete all details', abandon_path, :'data-confirm' => "Are you sure you wish to cancel this visit request?\r\rThis will delete all the information you have entered"

    -# Repeat an empty instance of the visitor fields to append additional visitors on the client-side
    = form_for(Visit.new(prisoner: Prisoner.new, visitors: [Visitor.new, Visitor.new], slots: []), url: '', html: { id: 'template' }) do |f|
      = f.fields_for Visitor.new, index: '' do |visitor_form|
        %script#additional-visitor(type="text/html")
          = render 'visitor_fields', f: visitor_form, index: '{{index}}', visitor: Visitor.new, js_template: true

    = render 'ad_help'
