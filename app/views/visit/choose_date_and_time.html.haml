- content_for :header, 'When do you want to visit?'

- content_for :progress_bar do
  %ol.progress
    %li.progress--completed
      .progress__step
        %span.progress__label Prisoner details
    %li.progress--completed.progress--previous
      .progress__step
        %span.progress__label Visitor details
    %li.progress--active
      .progress__step
        %span.progress__label Choose time
    %li
      .progress__step
        %span.progress__label Check request
    %li
      .progress__step
        %span.progress__label Send request


%ul.visible--js-enabled
  %li choose 3 possible dates and times for your visit 
  %li youâ€™ll receive a confirmation email in 3 working days
  %li to get started, choose a date on the calendar 

- if visit.slots.any? {|s| s.errors.any?}
  #error-summary.validation-summary.group(role="alert" tabindex="-1" aria-labelledby="error-heading")
    %h2#error-heading You need to fix the errors on this page before continuing.
    %p You need to choose date(s) and time(s) for your visit to continue.


.left-column.visible--js-enabled
  %h2.step_prompt First choose a date
  
  .DateSlider.visible--mobile(data-selectonload='true')
    %h3.DateSlider-month
      - range_by_month.each do |month, dates|
        %span{ :'data-date' => month.strftime('%Y-%m') }= month.strftime '%B'
    .DateSlider-sliders
      .DateSlider-touch.scroll
        %ul.DateSlider-days
      %a.DateSlider-button.DateSlider-buttonLeft(href='#') &#10094;
      %a.DateSlider-button.DateSlider-buttonRight(href='#') &#10095;
      .DateSlider-smallDates.scroll
        %ul.DateSlider-days
          - bookable_range_with_buffer(2).each do |day|
            %li{ :'data-date' => day, :class => ('unavailable' unless bookable?(day)) }= day.strftime '%e'
      .DateSlider-portalFrame
      .DateSlider-largeDates.scroll
        %ul.DateSlider-days
          - bookable_range.each do |day|
            %li{ :'data-date' => day, :class => ('unavailable' unless bookable?(day)) }
              %small= day.strftime '%a'
              = day.strftime '%e'


  .hidden--mobile
    %ul.BookingCalendar-availableMonths
      - bookable_range.group_by{|r|r.beginning_of_month}.keys.each do |month|
        %li
          %a{ :href => "#month-#{month.strftime('%Y-%m')}" }= month.strftime('%B')

    .BookingCalendar-nav
      %a.prev(href='#') Previous
      %strong= Date.today.strftime('%B')
      %a.next(href='#') Next
    %table.BookingCalendar
      %thead
        %tr
          - %w(Mon Tue Wed Thu Fri Sat Sun).each do |d|
            %th= d
    
    .BookingCalendar-wrap
      %table.BookingCalendar
        %tbody
          - weeks.each do |week|
            %tr
              - week[1].each do |day|
                %td{ :class => day_classes(day) }
                  .BookingCalendar-content
                    %a.BookingCalendar-dayLink{ :href => "#date-#{day.strftime('%Y-%m-%d')}", :'data-date' => day }
                      %span.visuallyhidden= day.strftime('%A')
                      %span= day.strftime('%e')
                      %span.visuallyhidden
                        = day.strftime('%B')
                        = bookable?(day) ? 'available' : 'unavailable'
                    - if tag_with_today? day
                      %span.BookingCalendar-tag.BookingCalendar-tag--today Today
                    - if tag_with_month? day
                      %span.BookingCalendar-tag.BookingCalendar-month{ :id => "month-#{day.strftime('%Y-%m')}" }(tabindex='-1')= day.strftime('%b')
      
    %ul.BookingCalendar-key
      %li
        .BookingCalendar-dayBox
        Available
      %li
        .BookingCalendar-dayBox.BookingCalendar-day--unavailable
        Unavailable

.right-column
  .slots.js-slotpicker{ :'data-optionlimits' => number_of_slots }
    %h2.step_prompt Now choose a time
    .js-slotpicker-options.day-slots#in-the-past
      %p It is not possible to book a visit in the past.
    .js-slotpicker-options.day-slots#too-far-ahead
      %p You can only book a visit in the next #{Slot::BOOKABLE_DAYS} days.
    .js-slotpicker-options.day-slots#booking-gap
      %p You can only book a visit 3 days in advance.

    .js-slotpicker__months
      - range_by_month.keys.each do |month|
        .slot__month{ :id => month.strftime('month-%Y-%m-%d') }(data-focusfirst="true")

          - range_by_month[month].each do |date|
            .js-slotpicker-options.day-slots.cf{ :id => "date-#{date.strftime('%Y-%m-%d')}", :tabindex => -1 }
              %h4.day-slots-heading= date.strftime("%A %e %B")
              - if day_is_bookable date
                - slots_for_day(date).each do |slot|
                  - slot_start = Time.strptime(slot[0].to_s, '%H%M')
                  - slot_end = Time.strptime(slot[1].to_s, '%H%M')
                  %label.slot
                    %input.js-slotpicker-option{ :value => "#{date.strftime('%Y-%m-%d')}-#{slot[0]}-#{slot[1]}" }(type="checkbox" name="slot")
                    %strong= slot_start.strftime("%l:%M%P")
                    %span.duration= (slot_end - slot_start).duration

              - elsif unbookable_dates.include?(date)
                %p It is not possible to book a visit on this day.

              - else
                %p There are no sessions available on #{date.strftime('%A')}s.

  .selected-slots.js-selected-slots
    %h2.step_prompt Chosen time (up to 3 per visit)
    .selected-slots-group
      %ul
        - (1..number_of_slots).each_with_index do |i|
          %li
            - unless i == 1
              %a.icon.slot-promote.js-promote-slot{ :href => "##{i}" } Promote
            %a.icon.slot-remove.js-remove-slot(href="#") Remove
            .slot-position= i
            %p.date
            %p.time
            %p.prompt Choose a #{%w[\  second third][i-1]} date and time from the calendar

    %p.js-promote-help Use the arrows to put your visit choices in the order that suits you best.


= form_for visit, url: update_choose_date_and_time_path, :html => { :class => 'slot-form' } do |f|

  .js-slotpicker-chosen
    - @slots.each_with_index do |slot, index|
      = f.fields_for :slots, slot do

        .group.js-slotpicker-slot
          %label Option #{index+1}

          %select(name='visit[slots][][slot]')
            %option(value='') none
            - bookable_range.each do |date|
              -# Only bookable days
              - if bookable_week_days.include?(date.wday)
                - if day_is_bookable date
                  - slots_for_day(date).each do |slot|
                    - value = [date.strftime('%Y-%m-%d'), slot.join('-')].join('-')
                    %option{ value: value, selected: ('selected' if value == current_slots[index]) }= date.strftime('%A, %e %B - ') + Time.strptime(slot[0].to_s, '%H%M').strftime('%l:%M%P')

  .actions
    .primary-actions
      = f.button :Continue, :name => 'next', :value => 'continue', :class => 'button button-primary js-submit'
    %p= link_to 'Cancel and delete all details', abandon_path, :'data-confirm' => "Are you sure you wish to cancel this visit request?\r\rThis will delete all the information you have entered"

:javascript
  pvbe = {
    bookable_from:      '#{bookable_from.strftime('%Y-%m-%d')}',
    current_slots:      #{current_slots.to_json},
    bookable_week_days: #{bookable_week_days.to_json},
    bookable_dates:     #{bookable_dates.to_json}
  }
