- content_for :header do
  %h1 Your visit date and time

:javascript
  var slots = #{visit.slots.to_json};

%p
  Now choose 
  %strong up to three 
  visit times that will be sent to the prisonâ€™s booking team to confirm availablity.

- visiting_slots = Slot::TIMES[visit.prisoner.prison_name.downcase.to_sym]
- start_day = Date.today+2
- date_range = start_day..start_day+28.days
- range_by_month = date_range.group_by { |d| d.beginning_of_month }
- number_of_slots = 3

.selected-slots
  %h3 Selected visit times
  %ul
    - (1..number_of_slots).each_with_index do |i|
      %li
        %a.js-remove-slot(href="#") &times;
        %p.date
        %p.time
        %p.placeholder
          = [:first, :second, :third][i-1].capitalize
          visit time

= form_for visit, url: update_step4_path, :html => { :class => 'slot-form' } do |f|

  - if f.object.errors.any?
    %div
      Your form could not be submitted. Please fix the errors below.

    - if f.object.errors[:slots]
      %div
        You need to select at least one slot and at most three slots.

  .slot-chooser.js-tabs.cf
    %h2
      %small.todays-date
        Today:
        %strong #{Date.today.strftime('%e %b %Y')}
      #{visit.prisoner.prison_name} visitors centre

    .month-selector
      %ul.js-tabs-nav
        - range_by_month.keys.each do |month|
          %li= link_to month.strftime('%B'), month.strftime('#month-%Y-%m-%d')

    .slotpicker-wrapper.js-slotpicker.js-tabs-content{ :'data-optionlimits' => number_of_slots }
      - range_by_month.keys.each do |month|
        .slotpicker.js-tabs.cf{ :id => month.strftime('month-%Y-%m-%d') }(data-focusfirst="true")
          .slotpicker-nav
            %h3 First, select a date below
            %ul.js-tabs-nav
              - range_by_month[month].each do |date|
                %li= link_to date.strftime("%A %e <span>%B</span>").html_safe, date.strftime('#date-%Y-%m-%d'), :class => ['js-slotpicker-day', ('unavailable' unless visiting_slots.keys.include?(date.strftime('%a').downcase.to_sym))]

          .slots
            %h3 Then select a time slot
            .slotpicker-content.js-tabs-content
              - range_by_month[month].each do |date|
                %div.js-slotpicker-options{ :id => "date-#{date.strftime('%Y-%m-%d')}" }
                  - if visiting_slots.keys.include?(date.strftime('%a').downcase.to_sym)
                    - visiting_slots[date.strftime('%a').downcase.to_sym].each_with_index do |slot, index|
                      - slot_start = Time.strptime(slot[0].to_s, '%H%M')
                      - slot_end = Time.strptime(slot[1].to_s, '%H%M')
                      %h4 #{[:First, :Second, :Third][index]} session
                      %label.slot
                        = slot_start.strftime("%l:%M%P to ")
                        = slot_end.strftime("%l:%M%P")
                        %input.js-slotpicker-option{ :value => "#{date.strftime('%Y-%m-%d')}-#{slot[0]}-#{slot[1]}" }(type="checkbox" name="slot")

                  - else
                    %p There are no sessions available on #{date.strftime('%A')}s.

    .hidden.js-slotpicker-chosen
      - @slots.each_with_index do |slot, index|
        = f.fields_for :slots, slot do |builder|

          %fieldset.js-slotpicker-slot
            %legend Choice #{index+1}

            .group
              = label_tag "visit[slots][][date]", 'Date'
              = date_field_tag "visit[slots][][date]", slot.date

            .group
              = label_tag "visit[slots][][time]", 'Time range'
              = text_field_tag "visit[slots][][times]", slot.times

  .actions
    = f.button :Continue, :name => 'next', :value => 'continue', :class => 'button button-primary'
