- content_for :header do
  %h1 Your visit date and time

- visiting_slots = Slot::TIMES[visit.prisoner.prison_name.downcase.to_sym]
- start_day = Date.today+2
- date_range = start_day..start_day+28.days
- range_by_month = date_range.group_by { |d| d.beginning_of_month }
- number_of_slots = 3
- unavailable_days = { sun: 0, mon: 1, tue: 2, wed: 3, thu: 4, fri: 5, sat: 6 }.delete_if { |k, v| visiting_slots.keys.include?(k) }.values

%p
  Choose 
  %strong up to three 
  visit times that will be sent to the prisonâ€™s booking team to check availability.

- if visit.slots.any? {|s| s.errors.any?}
  #error-summary.validation-summary.group(role="alert" tabindex="-1" aria-labelledby="error-heading")
    %h2#error-heading Your form could not be submitted. Please fix the errors below.
    %p You need to select at least one slot and at most three slots.

#calendar

.slots.js-slotpicker{ :'data-optionlimits' => number_of_slots }
  - range_by_month.keys.each do |month|
    .slot__month{ :id => month.strftime('month-%Y-%m-%d') }(data-focusfirst="true")

      - range_by_month[month].each do |date|
        .js-slotpicker-options.day-slots.cf{ :id => "date-#{date.strftime('%Y-%m-%d')}" }
          - if visiting_slots.keys.include?(date.strftime('%a').downcase.to_sym)
            - visiting_slots[date.strftime('%a').downcase.to_sym].each_with_index do |slot, index|
              - slot_start = Time.strptime(slot[0].to_s, '%H%M')
              - slot_end = Time.strptime(slot[1].to_s, '%H%M')
              %label.slot
                %small= date.strftime("%A %e %B")
                %span
                  = slot_start.strftime("%l:%M%P to ")
                  = slot_end.strftime("%l:%M%P")
                %input.js-slotpicker-option{ :value => "#{date.strftime('%Y-%m-%d')}-#{slot[0]}-#{slot[1]}" }(type="checkbox" name="slot")

          - else
            %p There are no sessions available on #{date.strftime('%A')}s.

.selected-slots
  %h3 Selected visit times
  %p.hidden--mobile Chose your visiting preference using the arrows
  %ul
    - (1..number_of_slots).each_with_index do |i|
      %li
        %a.js-remove-slot(href="#") &times;
        %p.date
        %p.time
        %p.placeholder Option #{[:one, :two, :three][i-1]}


= form_for visit, url: update_step4_path, :html => { :class => 'slot-form' } do |f|

  .hidden.js-slotpicker-chosen
    - @slots.each_with_index do |slot, index|
      = f.fields_for :slots, slot do |builder|

        %fieldset.js-slotpicker-slot
          %legend Choice #{index+1}

          .group
            = label_tag "visit[slots][][date]", 'Date'
            = date_field_tag "visit[slots][][date]", slot.date

          .group
            = label_tag "visit[slots][][time]", 'Time range'
            = text_field_tag "visit[slots][][times]", slot.times

  .actions
    = f.button :Continue, :name => 'next', :value => 'continue', :class => 'button button-primary'

:javascript
  var slots = #{visit.slots.to_json},
    unavailable_days = #{unavailable_days.to_json};
